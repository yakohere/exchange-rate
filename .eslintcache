[{"C:\\Users\\yako\\Desktop\\exchange-rate\\src\\index.js":"1","C:\\Users\\yako\\Desktop\\exchange-rate\\src\\converter.js":"2","C:\\Users\\yako\\Desktop\\exchange-rate\\src\\util\\CustomInputFrom.js":"3","C:\\Users\\yako\\Desktop\\exchange-rate\\src\\util\\customInputFrom.js":"4","C:\\Users\\yako\\Desktop\\exchange-rate\\src\\util\\customInputTo.js":"5","C:\\Users\\yako\\Desktop\\exchange-rate\\src\\converters.js":"6","C:\\Users\\yako\\Desktop\\exchange-rate\\src\\store\\actions.js":"7","C:\\Users\\yako\\Desktop\\exchange-rate\\src\\store\\actionTypes.js":"8","C:\\Users\\yako\\Desktop\\exchange-rate\\src\\store\\index.js":"9"},{"size":458,"mtime":1607693547058,"results":"10","hashOfConfig":"11"},{"size":2555,"mtime":1607711843512,"results":"12","hashOfConfig":"11"},{"size":1263,"mtime":1607620168925,"results":"13","hashOfConfig":"11"},{"size":1074,"mtime":1607701618191,"results":"14","hashOfConfig":"11"},{"size":1560,"mtime":1607703585619,"results":"15","hashOfConfig":"11"},{"size":1589,"mtime":1607711843512,"results":"16","hashOfConfig":"11"},{"size":1453,"mtime":1607711841947,"results":"17","hashOfConfig":"11"},{"size":319,"mtime":1607711842030,"results":"18","hashOfConfig":"11"},{"size":5818,"mtime":1607711854460,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"rat74m",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\yako\\Desktop\\exchange-rate\\src\\index.js",[],["43","44"],"C:\\Users\\yako\\Desktop\\exchange-rate\\src\\converter.js",["45","46","47","48"],"import { useEffect, useState } from \"react\";\r\nimport CustomInputFrom from \"./util/customInputFrom\";\r\nimport CustomInputTo from \"./util/customInputTo\";\r\nimport styled from \"styled-components\";\r\nimport { change_from_currency, change_from_amount, get_initial_values, change_to_currency, add_to, remove_to } from \"./store/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport AddIcon from \"./icons/add.svg\";\r\nimport ArrowIcon from \"./icons/arrow.svg\";\r\n\r\nconst Converter = (props) => {\r\n    const { change_from_currency, change_from_amount, change_to_currency, add_to, remove_to, converterId, currencies, defFromCurr, toes } = props;\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Inputs>\r\n                <CustomInputFrom\r\n                    currencyChange={(e) => change_from_currency(e.target.value, converterId)}\r\n                    amountChange={(e) => change_from_amount(e.target.value, converterId)}\r\n                    addClicked={() => add_to(converterId)}\r\n                    currencies={currencies}\r\n                    defFromCurr={defFromCurr}\r\n                />\r\n\r\n                <img src={ArrowIcon} className=\"arrow\" />\r\n\r\n                <Toes>\r\n                    {toes.map((to) =>\r\n                        <CustomInputTo\r\n                            key={to.id}\r\n                            toCurrency={to.currency}\r\n                            toAmount={to.amount}\r\n                            iconDisplay={to.id === 1 ? \"none\" : \"block\"}\r\n                            toCurrencyChange={(e) => change_to_currency(e.target.value, to.id, converterId)}\r\n                            removeTo={() => remove_to(to.id, converterId)}\r\n                            currencies={currencies}\r\n                        />\r\n                    )}\r\n                </Toes>\r\n\r\n                <img src={AddIcon} onClick={() => add_to(converterId)} className=\"add\" />\r\n            </Inputs>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    change_from_currency,\r\n    change_from_amount,\r\n    get_initial_values,\r\n    change_to_currency,\r\n    add_to,\r\n    remove_to\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Converter);\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;   \r\n    margin: 10px 0; \r\n`;\r\n\r\nconst Toes = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nconst Inputs = styled.div`\r\n    display: flex; \r\n    align-items: center;\r\n\r\n    .arrow {   \r\n        min-width: 50px;\r\n        margin: 0 15px; \r\n    }\r\n\r\n    .add {\r\n        min-width: 50px;\r\n        margin: 0 15px; \r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\n","C:\\Users\\yako\\Desktop\\exchange-rate\\src\\util\\CustomInputFrom.js",[],"C:\\Users\\yako\\Desktop\\exchange-rate\\src\\util\\customInputFrom.js",[],["49","50"],"C:\\Users\\yako\\Desktop\\exchange-rate\\src\\util\\customInputTo.js",["51"],"import styled from \"styled-components\";\r\nimport DeleteIcon from \"../icons/delete.svg\"\r\n\r\nconst CustomInputTo = (props) => {\r\n\r\n    const numberWithSpaces = (x) => {\r\n        var parts = x.toString().split(\".\");\r\n        parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\r\n        return parts.join(\".\");\r\n    }\r\n\r\n    return (\r\n        <Input>\r\n            <Select onChange={props.toCurrencyChange}>\r\n                <option defaultValue=\"selected\">{props.toCurrency}</option>\r\n                {props.currencies.map(currency => <option key={currency}>{currency}</option>)}\r\n            </Select>\r\n            <TextField value={numberWithSpaces(parseFloat(props.toAmount).toFixed(2))} readOnly />\r\n            <img id=\"remove\" src={DeleteIcon} onClick={props.removeTo} style={{ display: props.iconDisplay }} />\r\n        </Input>\r\n    );\r\n};\r\n\r\nexport default CustomInputTo;\r\n\r\n\r\nconst Input = styled.div`\r\n    width: 250px;\r\n    height: 50px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border: 2px solid #2600ff;\r\n    box-shadow: 0px 0px 10px 0px rgba(38,0,255,0.5);\r\n    border-radius: 5px;\r\n    margin: 0 10px;\r\n\r\n    #remove { \r\n        width: 25px;  \r\n        margin: 0; \r\n    }\r\n\r\n`;\r\n\r\nconst Select = styled.select`\r\n    border: none; \r\n    border-radius: 5px;\r\n    outline: none;\r\n    font-weight: 700;\r\n    font-size: 20px;  \r\n`;\r\n\r\nconst TextField = styled.input`\r\n    width: 130px;  \r\n    border: none;\r\n    border-radius: 5px;\r\n    outline: none; \r\n    font-weight: 700;\r\n    font-size: 20px; \r\n`;","C:\\Users\\yako\\Desktop\\exchange-rate\\src\\converters.js",["52","53"],"import { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport Converter from \"./converter\";\r\nimport { get_initial_values, add_converter } from \"./store/actions\";\r\nimport AddIcon from \"./icons/add.svg\";\r\n\r\nconst Converters = (props) => {\r\n    const { get_initial_values, add_converter } = props;\r\n\r\n    useEffect(() => {\r\n        get_initial_values();\r\n    }, []);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <section>\r\n                <h2>FROM</h2>\r\n                <h2>TO</h2>\r\n            </section>\r\n            {props.converters.map(converter => {\r\n                return <Converter\r\n                    key={converter.id}\r\n                    converterId={converter.id}\r\n                    toes={converter.toes}\r\n                    currencies={converter.currencies}\r\n                    defFromCurr={converter.from.currency}\r\n                />\r\n            })}\r\n\r\n            <img src={AddIcon} onClick={() => add_converter()} />\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    converters: state.converters\r\n});\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    get_initial_values,\r\n    add_converter\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Converters);\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column; \r\n    padding: 50px;\r\n\r\n    section {\r\n        width: 380px;\r\n        display: flex; \r\n        justify-content: space-between;\r\n    }\r\n\r\n    img {\r\n        cursor: pointer;    \r\n        width: 50px;\r\n        margin-top: 15px;\r\n   }\r\n`;","C:\\Users\\yako\\Desktop\\exchange-rate\\src\\store\\actions.js",[],"C:\\Users\\yako\\Desktop\\exchange-rate\\src\\store\\actionTypes.js",[],"C:\\Users\\yako\\Desktop\\exchange-rate\\src\\store\\index.js",["54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":10,"nodeType":"62","messageId":"63","endLine":1,"endColumn":19},{"ruleId":"60","severity":1,"message":"64","line":1,"column":21,"nodeType":"62","messageId":"63","endLine":1,"endColumn":29},{"ruleId":"65","severity":1,"message":"66","line":24,"column":17,"nodeType":"67","endLine":24,"endColumn":58},{"ruleId":"65","severity":1,"message":"66","line":40,"column":17,"nodeType":"67","endLine":40,"endColumn":90},{"ruleId":"56","replacedBy":"68"},{"ruleId":"58","replacedBy":"69"},{"ruleId":"65","severity":1,"message":"66","line":19,"column":13,"nodeType":"67","endLine":19,"endColumn":113},{"ruleId":"70","severity":1,"message":"71","line":13,"column":8,"nodeType":"72","endLine":13,"endColumn":10,"suggestions":"73"},{"ruleId":"65","severity":1,"message":"66","line":31,"column":13,"nodeType":"67","endLine":31,"endColumn":66},{"ruleId":"60","severity":1,"message":"74","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"76","line":23,"column":1,"nodeType":"77","endLine":151,"endColumn":3},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["78"],["79"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'get_initial_values'. Either include it or remove the dependency array.","ArrayExpression",["80"],"'axios' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [get_initial_values]",{"range":"83","text":"84"},[421,423],"[get_initial_values]"]